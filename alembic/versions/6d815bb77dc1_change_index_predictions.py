"""change index predictions

Revision ID: 6d815bb77dc1
Revises: 15a94b3d2592
Create Date: 2025-05-06 11:45:57.856247

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "6d815bb77dc1"
down_revision: Union[str, None] = "15a94b3d2592"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop the existing primary key constraint if it exists
    op.drop_constraint(
        "apiprediction_pkey",
        "apiprediction",
        type_="primary",
        schema="noshow",
    )

    # Drop the existing FK constraint if it exists
    op.drop_constraint(
        "apicallresponse_prediction_id_fkey",
        "apicallresponse",
        type_="foreignkey",
        schema="noshow",
    )

    # Rename old PK column to appointment_id
    op.alter_column(
        "apiprediction",
        "id",
        new_column_name="appointment_id",
        schema="noshow",
    )

    # Add new id column to apiprediction as INT Identity
    op.add_column(
        "apiprediction",
        sa.Column(
            "id",
            sa.Integer(),
            sa.Identity(start=1, increment=1),
            primary_key=True,
            nullable=False,
            index=True,
        ),
        schema="noshow",
    )

    # Update the values in the prediction_id column to match the new id column
    op.execute(
        """
        UPDATE noshow.apicallresponse
        SET prediction_id = (
            SELECT id
            FROM noshow.apiprediction
            WHERE appointment_id = noshow.apicallresponse.prediction_id
        )
        WHERE prediction_id IS NOT NULL
        """
    )

    op.alter_column(
        "apicallresponse",
        "prediction_id",
        existing_type=sa.VARCHAR(length=50, collation="SQL_Latin1_General_CP1_CI_AS"),
        type_=sa.Integer(),
        existing_nullable=False,
        schema="noshow",
    )

    op.create_foreign_key(
        "apicallresponse_prediction_id_fkey",
        "apicallresponse",
        "apiprediction",
        ["prediction_id"],
        ["id"],
        source_schema="noshow",
        referent_schema="noshow",
    )

    op.create_index(
        op.f("ix_noshow_apiprediction_appointment_id"),
        "apiprediction",
        ["appointment_id"],
        unique=False,
        schema="noshow",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_noshow_apiprediction_appointment_id"),
        table_name="apiprediction",
        schema="noshow",
    )

    # Remove any foreign key constraints referencing the id column
    op.drop_constraint(
        "apicallresponse_prediction_id_fkey",
        "apicallresponse",
        type_="foreignkey",
        schema="noshow",
    )

    # Change the type of the prediction_id column back to VARCHAR
    op.alter_column(
        "apicallresponse",
        "prediction_id",
        existing_type=sa.Integer(),
        type_=sa.VARCHAR(length=50, collation="SQL_Latin1_General_CP1_CI_AS"),
        existing_nullable=False,
        schema="noshow",
    )

    # Update the values in the prediction_id column to match the old id column
    op.execute(
        """
        UPDATE noshow.apicallresponse
        SET prediction_id = (
            SELECT appointment_id
            FROM noshow.apiprediction
            WHERE id = noshow.apicallresponse.prediction_id
        )
        WHERE prediction_id IS NOT NULL
        """
    )

    # Drop the new id column
    op.drop_column("apiprediction", "id", schema="noshow")

    # Rename the appointment_id column back to id
    op.alter_column(
        "apiprediction",
        "appointment_id",
        new_column_name="id",
        schema="noshow",
    )

    # Recreate Foreign Key constraint
    op.create_foreign_key(
        "apicallresponse_prediction_id_fkey",
        "apicallresponse",
        "apiprediction",
        ["prediction_id"],
        ["id"],
        source_schema="noshow",
        referent_schema="noshow",
    )

    # Recreate the primary key constraint
    op.create_primary_key(
        "apiprediction_pkey",
        "apiprediction",
        ["id"],
        schema="noshow",
    )

    # ### end Alembic commands ###
